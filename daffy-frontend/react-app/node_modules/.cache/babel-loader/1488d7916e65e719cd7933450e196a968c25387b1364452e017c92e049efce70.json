{"ast":null,"code":"// API service for connecting to Daffy Backend\nconst API_BASE_URL = 'http://localhost:8080/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('authToken');\n  }\n\n  // Set authentication token\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem('authToken', token);\n  }\n\n  // Clear authentication token\n  clearToken() {\n    this.token = null;\n    localStorage.removeItem('authToken');\n  }\n\n  // Get headers with authentication\n  getHeaders() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    return headers;\n  }\n\n  // Generic request method\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getHeaders(),\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (response.status === 401) {\n        // Token expired or invalid\n        this.clearToken();\n        window.location.href = '/signin';\n        return null;\n      }\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Authentication endpoints\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  async register(userData) {\n    return this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async refreshToken(refreshToken) {\n    return this.request('/auth/refresh', {\n      method: 'POST',\n      body: JSON.stringify({\n        refreshToken\n      })\n    });\n  }\n\n  // User endpoints\n  async getCurrentUser() {\n    return this.request('/users/me');\n  }\n  async getUserById(id) {\n    return this.request(`/users/${id}`);\n  }\n  async getUserProfile(id) {\n    return this.request(`/users/${id}/profile`);\n  }\n  async updateUserProfile(id, profileData) {\n    return this.request(`/users/${id}/profile`, {\n      method: 'PUT',\n      body: JSON.stringify(profileData)\n    });\n  }\n  async searchUsers(keyword, page = 0, size = 10) {\n    return this.request(`/users/search?keyword=${encodeURIComponent(keyword)}&page=${page}&size=${size}`);\n  }\n  async getActiveUsers(page = 0, size = 10) {\n    return this.request(`/users/active?page=${page}&size=${size}`);\n  }\n\n  // Admin endpoints (requires admin role)\n  async getAdminDashboard() {\n    return this.request('/admin/dashboard');\n  }\n  async getAllUsers(page = 0, size = 20) {\n    return this.request(`/admin/users?page=${page}&size=${size}`);\n  }\n  async suspendUser(userId) {\n    return this.request(`/admin/users/${userId}/suspend`, {\n      method: 'POST'\n    });\n  }\n  async activateUser(userId) {\n    return this.request(`/admin/users/${userId}/activate`, {\n      method: 'POST'\n    });\n  }\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}/delete`, {\n      method: 'POST'\n    });\n  }\n  async getUserStats() {\n    return this.request('/admin/users/stats');\n  }\n  async getSystemHealth() {\n    return this.request('/admin/system/health');\n  }\n\n  // Test endpoints\n  async getHealth() {\n    return this.request('/test/health');\n  }\n  async getInfo() {\n    return this.request('/test/info');\n  }\n}\n\n// Create and export a single instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","constructor","baseURL","token","localStorage","getItem","setToken","setItem","clearToken","removeItem","getHeaders","headers","request","endpoint","options","url","config","response","fetch","status","window","location","href","ok","errorData","json","catch","Error","message","error","console","login","credentials","method","body","JSON","stringify","register","userData","refreshToken","getCurrentUser","getUserById","id","getUserProfile","updateUserProfile","profileData","searchUsers","keyword","page","size","encodeURIComponent","getActiveUsers","getAdminDashboard","getAllUsers","suspendUser","userId","activateUser","deleteUser","getUserStats","getSystemHealth","getHealth","getInfo","apiService"],"sources":["E:/html,css,js/project_/social/Daffy/daffy-frontend/react-app/src/services/api.js"],"sourcesContent":["// API service for connecting to Daffy Backend\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\nclass ApiService {\r\n    constructor() {\r\n        this.baseURL = API_BASE_URL;\r\n        this.token = localStorage.getItem('authToken');\r\n    }\r\n\r\n    // Set authentication token\r\n    setToken(token) {\r\n        this.token = token;\r\n        localStorage.setItem('authToken', token);\r\n    }\r\n\r\n    // Clear authentication token\r\n    clearToken() {\r\n        this.token = null;\r\n        localStorage.removeItem('authToken');\r\n    }\r\n\r\n    // Get headers with authentication\r\n    getHeaders() {\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n        };\r\n        \r\n        if (this.token) {\r\n            headers['Authorization'] = `Bearer ${this.token}`;\r\n        }\r\n        \r\n        return headers;\r\n    }\r\n\r\n    // Generic request method\r\n    async request(endpoint, options = {}) {\r\n        const url = `${this.baseURL}${endpoint}`;\r\n        const config = {\r\n            headers: this.getHeaders(),\r\n            ...options,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(url, config);\r\n            \r\n            if (response.status === 401) {\r\n                // Token expired or invalid\r\n                this.clearToken();\r\n                window.location.href = '/signin';\r\n                return null;\r\n            }\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json().catch(() => ({}));\r\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('API request failed:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // Authentication endpoints\r\n    async login(credentials) {\r\n        return this.request('/auth/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n        });\r\n    }\r\n\r\n    async register(userData) {\r\n        return this.request('/auth/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify(userData),\r\n        });\r\n    }\r\n\r\n    async refreshToken(refreshToken) {\r\n        return this.request('/auth/refresh', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ refreshToken }),\r\n        });\r\n    }\r\n\r\n    // User endpoints\r\n    async getCurrentUser() {\r\n        return this.request('/users/me');\r\n    }\r\n\r\n    async getUserById(id) {\r\n        return this.request(`/users/${id}`);\r\n    }\r\n\r\n    async getUserProfile(id) {\r\n        return this.request(`/users/${id}/profile`);\r\n    }\r\n\r\n    async updateUserProfile(id, profileData) {\r\n        return this.request(`/users/${id}/profile`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(profileData),\r\n        });\r\n    }\r\n\r\n    async searchUsers(keyword, page = 0, size = 10) {\r\n        return this.request(`/users/search?keyword=${encodeURIComponent(keyword)}&page=${page}&size=${size}`);\r\n    }\r\n\r\n    async getActiveUsers(page = 0, size = 10) {\r\n        return this.request(`/users/active?page=${page}&size=${size}`);\r\n    }\r\n\r\n    // Admin endpoints (requires admin role)\r\n    async getAdminDashboard() {\r\n        return this.request('/admin/dashboard');\r\n    }\r\n\r\n    async getAllUsers(page = 0, size = 20) {\r\n        return this.request(`/admin/users?page=${page}&size=${size}`);\r\n    }\r\n\r\n    async suspendUser(userId) {\r\n        return this.request(`/admin/users/${userId}/suspend`, {\r\n            method: 'POST',\r\n        });\r\n    }\r\n\r\n    async activateUser(userId) {\r\n        return this.request(`/admin/users/${userId}/activate`, {\r\n            method: 'POST',\r\n        });\r\n    }\r\n\r\n    async deleteUser(userId) {\r\n        return this.request(`/admin/users/${userId}/delete`, {\r\n            method: 'POST',\r\n        });\r\n    }\r\n\r\n    async getUserStats() {\r\n        return this.request('/admin/users/stats');\r\n    }\r\n\r\n    async getSystemHealth() {\r\n        return this.request('/admin/system/health');\r\n    }\r\n\r\n    // Test endpoints\r\n    async getHealth() {\r\n        return this.request('/test/health');\r\n    }\r\n\r\n    async getInfo() {\r\n        return this.request('/test/info');\r\n    }\r\n}\r\n\r\n// Create and export a single instance\r\nconst apiService = new ApiService();\r\nexport default apiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}