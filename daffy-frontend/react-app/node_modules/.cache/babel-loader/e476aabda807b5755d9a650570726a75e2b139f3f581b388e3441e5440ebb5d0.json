{"ast":null,"code":"var _jsxFileName = \"E:\\\\html,css,js\\\\project_\\\\social\\\\hamim-da\\\\daffy-frontend\\\\react-app\\\\src\\\\context\\\\NotificationContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport Notification from '../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotification = () => {\n  _s();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const addNotification = (message, type = 'info', duration = 5000) => {\n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      message,\n      type,\n      duration\n    };\n    setNotifications(prev => [...prev, newNotification]);\n    return id;\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  const showSuccess = (message, duration) => addNotification(message, 'success', duration);\n  const showError = (message, duration) => addNotification(message, 'error', duration);\n  const showWarning = (message, duration) => addNotification(message, 'warning', duration);\n  const showInfo = (message, duration) => addNotification(message, 'info', duration);\n  const value = {\n    addNotification,\n    removeNotification,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-container\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n        message: notification.message,\n        type: notification.type,\n        duration: notification.duration,\n        onClose: () => removeNotification(notification.id)\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","Notification","jsxDEV","_jsxDEV","NotificationContext","useNotification","_s","context","Error","NotificationProvider","children","_s2","notifications","setNotifications","addNotification","message","type","duration","id","Date","now","Math","random","newNotification","prev","removeNotification","filter","notification","showSuccess","showError","showWarning","showInfo","value","Provider","className","map","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/html,css,js/project_/social/hamim-da/daffy-frontend/react-app/src/context/NotificationContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport Notification from '../components/Notification';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const addNotification = (message, type = 'info', duration = 5000) => {\r\n    const id = Date.now() + Math.random();\r\n    const newNotification = { id, message, type, duration };\r\n    \r\n    setNotifications(prev => [...prev, newNotification]);\r\n    \r\n    return id;\r\n  };\r\n\r\n  const removeNotification = (id) => {\r\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\r\n  };\r\n\r\n  const showSuccess = (message, duration) => addNotification(message, 'success', duration);\r\n  const showError = (message, duration) => addNotification(message, 'error', duration);\r\n  const showWarning = (message, duration) => addNotification(message, 'warning', duration);\r\n  const showInfo = (message, duration) => addNotification(message, 'info', duration);\r\n\r\n  const value = {\r\n    addNotification,\r\n    removeNotification,\r\n    showSuccess,\r\n    showError,\r\n    showWarning,\r\n    showInfo,\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={value}>\r\n      {children}\r\n      <div className=\"notification-container\">\r\n        {notifications.map(notification => (\r\n          <Notification\r\n            key={notification.id}\r\n            message={notification.message}\r\n            type={notification.type}\r\n            duration={notification.duration}\r\n            onClose={() => removeNotification(notification.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}